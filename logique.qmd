# Logique

## Logique propositionnelle

:::{#def-proposition}
## Proposition

Un énoncé qui est soit vrai, soit faux est appelé une **proposition**. La **valeur de vérité** d'une proposition est donc **VRAI** ou **FAUX**.

En `Python`, les valeurs de vérités sont données par `True` (**VRAI**) et `False` (**FAUX**).
:::

Un énoncé qui n'est pas une proposition (comme un paradoxe, une phrase impérative ou interrogative) sera qualifié d'innaceptable.

:::{#exm-propositions}
Les énoncés suivants sont des propositions:

- Les numéros de téléphones au Canada ont dix chiffres.
- La lune est faite de fromage.
- 42 est la réponse à la question portant sur la *vie, l'univers et tout ce qui existe*.
- Chaque nombre pair plus grand que 2 peut être exprimé comme la somme de deux nombres premiers.
- $3+7=12$

Les énoncés suivants ne sont **pas** des propositions:

- Voulez-vous du gâteau?
- La somme de deux carrés.
- $1+3+5+7+\ldots +2n+1$.
- Va dans ta chambre!
- $3+x=12$

:::

Nous utilisons une table de vérité pour montrer les valeurs de vérité de propositions composées.

### La négation

:::{#def-negation}
## La négation

Soit $p$ une proposition. L'énoncé:

> *Il n'est pas vrai que $p$.*

est une autre proposition appelée **négation** de $p$, qui est représentée par $\lnot p$. La proposition $\lnot p$ se lit *non $p$*. La table de vérité de la négation est donnée ci-dessous.

|      $p$      |   $\lnot p$   |
|:-------------:|:-------------:|
| $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ |

En `Python`, l'opérateur `not` permet de faire la négation d'une valeur de vérité.
```{python}
#| label: negation-python

def negation(p):
    return not p

print("p    non_p")
for p in [True, False]:
    non_p = negation(p)
    print(p, non_p)
```
:::

### La conjonction

> Je suis une roche **ET** je suis une île.

:::{#def-conjonction}
## La conjonction

Soit $p$ et $q$ deux propositions. La proposition *$p$ et $q$*, notée $p\wedge q$, est vraie si à la fois $p$ et $q$ sont vraies. Elle est fausse dans tous les autres cas. Cette proposition est appelée la **conjonction** de $p$ et de $q$. La table de vérité de la conjonction est donnée ci-dessous.

|      $p$      |      $q$      |  $p \wedge q$ |
|:-------------:|:-------------:|:-------------:|
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |

En `Python`, l'opérateur `and` permet de faire la conjonction de deux valeurs de vérité.
```{python}
#| label: conjonction-python

def conjonction(p, q):
    return p and q

print("p    q    p_et_q")
for p in [True, False]:
    for q in [True, False]:
        p_et_q = conjonction(p, q)
        print(p, q, p_et_q)
```
:::

### La disjonction

> Elle a étudié très fort **OU** elle est extrêmement brillante.

:::{#def-disjonction}
## La disjonction

Soit $p$ et $q$ deux propositions. La proposition *$p$ ou $q$*, notée $p\vee q$, est fausse si $p$ et $q$ sont fausses. Elle est vraie dans tous les autres cas. Cette proposition est appelée la **disjonction** de $p$ et de $q$. La table de vérité de la disjonction est donnée ci-dessous.

|      $p$      |      $q$      |   $p \vee q$  |
|:-------------:|:-------------:|:-------------:|
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |

En `Python`, l'opérateur `or` permet de faire la disjonction de deux valeurs de vérité.
```{python}
#| label: disjonction-python

def disjonction(p, q):
    return p or q

print("p    q    p_ou_q")
for p in [True, False]:
    for q in [True, False]:
        p_ou_q = disjonction(p, q)
        print(p, q, p_ou_q)
```
:::

### La disjonction exclusive

> Prenez **SOIT** deux Advil **OU** deux Tylenols.

:::{#def-disjonction-exclusive}
## La disjonction exclusive

Soit $p$ et $q$ deux propositions. La proposition *$p$ ou exclusif $q$*, notée $p\oplus q$, est vraie si $p$ et $q$ ont des valeurs de vérité **différentes**. Elle est fausse dans tous les autres cas. Cette proposition est appelée la **disjonction exclusive** de $p$ et de $q$. La table de vérité de la disjonction exclusive est donnée ci-dessous.

|      $p$      |      $q$      |  $p \oplus q$ |
|:-------------:|:-------------:|:-------------:|
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
| $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |

En `Python`, il n'existe pas d'opérateur logique pour effectuer la disjonction exclusive. On peut par contre utiliser l'opérateur bit à bit `^` pour faire cette disjonction exclusive.
:::

:::{#exm-disjonction-exclusive-python}

Utilisez les opérateurs logiques vus précédemment pour construire la table de vérité de la disjonction exclusive dans `Python`.
```{python}
#| label: disjonction-exclusive-python-todo
#| eval: false

def disjonction_exclusive(p, q):
    return #REMPLACEZ MOI#

print("p    q    p_ou_exclusif_q")
for p in [True, False]:
    for q in [True, False]:
        p_ou_exclusif_q = disjonction_exclusive(p, q)
        print(p, q, p_ou_exclusif_q)
```

```{python}
#| label: disjonction-exclusive-python
#| echo: false

def disjonction_exclusive(p, q):
    return p ^ q

print("p    q    p_ou_exclusif_q")
for p in [True, False]:
    for q in [True, False]:
        p_ou_exclusif_q = disjonction_exclusive(p, q)
        print(p, q, p_ou_exclusif_q)
```
:::

:::{.callout-important}
La disjonction exclusive signifie l'un ou l'autre, mais pas les deux.
:::

### L'implication

> **SI** vous avez 100 à l'examen final, **ALORS** vous obtiendrez A dans ce cours.

:::{#def-implication}
## L'implication

Soit $p$ et $q$ deux propositions. L'**implication** $p\rightarrow q$ est une proposition qui est fausse quand $p$ est vraie et que $q$ est fausse, et qui est vraie dans tous les autres cas. Dans une implication, $p$ est appelée l'**hypothèse** (ou l'**antécédent** ou la **prémisse**) et $q$, la **conclusion** (ou la **conséquence**). La table de vérité de l'implication' est donnée ci-dessous.

|      $p$      |      $q$      | $p \rightarrow q$ |
|:-------------:|:-------------:|:-----------------:|
| $\phantom{V}$ | $\phantom{V}$ |   $\phantom{V}$   |
| $\phantom{V}$ | $\phantom{V}$ |   $\phantom{V}$   |
| $\phantom{V}$ | $\phantom{V}$ |   $\phantom{V}$   |
| $\phantom{V}$ | $\phantom{V}$ |   $\phantom{V}$   |

En `Python`, il n'existe pas d'opérateur logique pour effectuer l'implication.
:::

:::{#exm-implication-python}

Utilisez les opérateurs logiques vus précédemment pour construire la table de vérité de l'implication dans `Python`.

```{python}
#| label: implication-python-todo
#| eval: false

def implication(p, q):
    return #REMPLACEZ MOI#

print("p    q    p_implique_q")
for p in [True, False]:
    for q in [True, False]:
        p_implique_q = implication(p, q)
        print(p, q, p_implique_q)
```

```{python}
#| label: implication-python
#| echo: false

def implication(p, q):
    return  (not p) or q

print("p    q    p_implique_q")
for p in [True, False]:
    for q in [True, False]:
        p_implique_q = implication(p, q)
        print(p, q, p_implique_q)
```
:::

:::{.callout-important}
Une implication peut être considérée comme un **contrat** qui échoue seulement si les conditions du contrat sont respectées mais les résultats ne sont pas remplis.
:::

Comme les implications apparaissent constamment en mathématiques, il existe une vaste terminologie pour désigner $p\rightarrow q$. Voici les modes les plus courants:

- si $p$ alors $q$;
- $p$ implique $q$;
- $p$ seulement si $q$;
- $p$ est suffisant pour $q$;
- $q$ si $p$;
- $q$ chaque fois que $p$;
- $q$ est nécessaire à $p$.

### La biconditionnelle

> Il pleut dehors **SI ET SEULEMENT SI** c'est un jour nuageux.

:::{#def-biconditionnelle}
## La biconditionnelle

Soit $p$ et $q$ deux propositions. La **biconditionnelle** $p\leftrightarrow q$ est une proposition qui est vraie quand $p$ et $q$ ont les mêmes valeurs de vérité et qui est fausse dans les autres cas. La table de vérité de la biconditionnelle est donnée ci-dessous.

|      $p$      |      $q$      | $p \leftrightarrow q$ |
|:-------------:|:-------------:|:---------------------:|
| $\phantom{V}$ | $\phantom{V}$ |     $\phantom{V}$     |
| $\phantom{V}$ | $\phantom{V}$ |     $\phantom{V}$     |
| $\phantom{V}$ | $\phantom{V}$ |     $\phantom{V}$     |
| $\phantom{V}$ | $\phantom{V}$ |     $\phantom{V}$     |

En `Python`, il n'existe pas d'opérateur logique pour effectuer la biconditionnelle.
:::

:::{#exm-biconditionnelle-python}

Utilisez les opérateurs logiques vus précédemment pour construire la table de vérité de la biconditionnelle dans `Python`.

```{python}
#| label: biconditionnelle-python-todo
#| eval: false

def biconditionnelle(p, q):
    return #REMPLACEZ MOI#

print("p    q    p_biconditionnelle_q")
for p in [True, False]:
    for q in [True, False]:
        p_biconditionnelle_q = biconditionnelle(p, q)
        print(p, q, p_biconditionnelle_q)
```

```{python}
#| label: biconditionnelle-python
#| echo: false

def biconditionnelle(p, q):
    return  (p and q) or (not p and not q)

print("p    q    p_biconditionnelle_q")
for p in [True, False]:
    for q in [True, False]:
        p_biconditionnelle_q = biconditionnelle(p, q)
        print(p, q, p_biconditionnelle_q)
```
:::

:::{.callout-important}
La biconditionnelle est vraie si les propositions ont la même valeur de vérité et fausse autrement.
:::

Comme les biconditionnelles apparaissent constamment en mathématiques, il existe une vaste terminologie pour désigner $p\leftrightarrow q$. Voici les modes les plus courants:

- $p$ si et seulement si $q$;
- $p$ est nécessaire et suffisante pour $q$;
- si $p$ alors $q$ et réciproquement.

:::{#def-reciproque-contraposee-inverse}
## Réciproque, contraposée et inverse

- La **réciproque** de la proposition $p\rightarrow q$ est la proposition $q \rightarrow p$.
- La **contraposée** de la proposition $p\rightarrow q$ est la proposition $\lnot q \rightarrow \lnot p$.
- L'**inverse** de la proposition $p\rightarrow q$ est la proposition $\lnot p \rightarrow \lnot q$.
:::

## Équivalences propositionnelles

Une proposition composée est une proposition formée de plusieurs connecteurs logiques.

:::{#def-tautologie-contradiction-contingence}
## Tautologie, contradiction et contingence

Une proposition composée qui est toujours vraie, quelle que soit la valeur de vérité des fonctions qui la compose est appelée une **tautologie**. Une proposition composée qui est toujours fausse est appelée une **contradiction**. Finalement, une proposition qui n'est ni une tautologie ni une contradiction est appelée une **contingence**.
:::

:::{#exm-tautologie-contradiction}
Remplissez la table de vérité suivante et dites si les propositions composées sont des tautologies, des contradictions ou des contingences.

|      $p$      |      $q$      | $p \vee \lnot p$ | $p \wedge \lnot p$ |
|:-------------:|:-------------:|:----------------:|:------------------:|
| $\phantom{V}$ | $\phantom{V}$ |   $\phantom{V}$  |    $\phantom{V}$   |
| $\phantom{V}$ | $\phantom{V}$ |   $\phantom{V}$  |    $\phantom{V}$   |
:::

:::{#exm-proposition-compose}

Le code ci-dessous révèle la table de vérité de la proposition composée $(p \wedge q) \vee \lnot q$.
```{python}
#| label: prop-composee-1

def conjonction(p, q):
    return p and q

def disjonction(p, q):
    return p or q

print("p    q    a")
for p in [True, False]:
    for q in [True, False]:
        a = disjonction(conjonction(p, q), not q)
        print(p, q, a)
```
De quelle manière pouvez-vous modifier le code précédent pour obtenir la table de vérité de la proposition composée $(p \vee \lnot q) \wedge \lnot p$?
:::

Lorsque vous créez votre table de vérité, il est crucial que vous soyiez systématique pour vous assurer d'avoir toutes les valeurs de vérité possibles pour chacune des propositions simples. Chaque proposition a deux valeurs de vérité possibles, le nombre de lignes de la table devrait être égal à $2^n$, où $n$ est le nombre de propositions. Vous devriez également considérer de briser vos propositions complexes en plus petites propositions.

:::{#exm-bloc-code}
L'extrait de code suivant fait intervenir les variables booléennes $p$, $q$ et $r$. Chacune de ces variables peut prendre les valeurs **vrai** ou **faux**. Pour chaque bloc indiqué, donnez toutes les valeurs possibles pour $p$, $q$ et $r$ au moment où le bloc est atteint.

```{python}
#| label: bloc-code-python
#| eval: false

if (p and q):
    if r:
        #BLOC 1#
    else:
        #BLOC 2#
else:
    #BLOC 3#
```

|  $p$  |  $q$  |  $r$  | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
|:-----:|:-----:|:-----:|:-------------:|:-------------:|:-------------:|
| **V** | **V** | **V** |               |               |               |
| **V** | **V** | **F** |               |               |               |
| **V** | **F** | **V** |               |               |               |
| **V** | **F** | **F** |               |               |               |
| **F** | **V** | **V** |               |               |               |
| **F** | **V** | **F** |               |               |               |
| **F** | **F** | **V** |               |               |               |
| **F** | **F** | **F** |               |               |               |

:::

:::{#def-propositions-equivalentes}
## Équivalences de propositions

Les propositions $p$ et $q$ sont dites **logiquement équivalentes** si la proposition $p \leftrightarrow q$ est une tautologie. Ainsi, deux propositions sont logiquement équivalentes si elles ont la même table de vérité, c’est-à-dire la même valeur de vérité dans tous les cas possibles.

La notation $p\equiv q$ signifie que $p$ et $q$ sont équivalentes.
:::

:::{#exm-proposition-equivalentes-1}
Vérifiez l'équivalence suivante à l'aide d'une table de vérité.
$$
p \rightarrow q \equiv \lnot p \vee q
$$

|  $p$  |  $q$  | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
|:-----:|:-----:|:-------------:|:-------------:|:-------------:|
| **V** | **V** |               |               |               |
| **V** | **F** |               |               |               |
| **F** | **V** |               |               |               |
| **F** | **F** |               |               |               |
:::

:::{#exm-proposition-equivalentes-2}
Vérifiez l'équivalence suivante à l'aide d'une table de vérité.
$$
\lnot (p \vee q) \equiv \lnot p \wedge \lnot q
$$

|  $p$  |  $q$  | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
|:-----:|:-----:|:-------------:|:-------------:|:-------------:|:-------------:|:-------------:|
| **V** | **V** |               |               |               |               |               |
| **V** | **F** |               |               |               |               |               |
| **F** | **V** |               |               |               |               |               |
| **F** | **F** |               |               |               |               |               |

:::

Pour gagner du temps, on note les équivalences fréquemment utilisées dans une table et on leur donne un nom ou un numéro afin d’y faire référence.

| **Nom**               | **Équivalence 1**                                         | **Équivalence 2**                                          |
|-----------------------|-----------------------------------------------------------|------------------------------------------------------------|
| **Identité**          | $p \wedge \mathbf{V} \equiv p$                            | $p \vee \mathbf{F} \equiv p$                               |
| **Domination**        | $p \vee \mathbf{V} \equiv \mathbf{V}$                     | $p \wedge \mathbf{F} \equiv \mathbf{F}$                    |
| **Idempotence**       | $p \vee p \equiv p$                                       | $p\wedge p \equiv p$                                       |
| **Double négation**   | $\lnot (\lnot p)   \equiv p$                              |                                                            |
| **Commutativité**     | $p\wedge q \equiv q \wedge p$                             | $p \vee q \equiv q \vee p$                                 |
| **Associativité**     | $(p \vee q) \vee r \equiv p \vee (q \vee r)$              | $(p \wedge q) \wedge r \equiv p \wedge (q \wedge r)$       |
| **Distributivité**    | $p \vee (q \wedge r) \equiv (p \vee q) \wedge (p \vee r)$ | $p\wedge (q \vee r) \equiv (p \wedge q) \vee (p \wedge r)$ |
| **Lois de De Morgan** | $\lnot (p \wedge q) \equiv \lnot p \vee \lnot q$          | $\lnot (p \vee q) \equiv \lnot p \wedge \lnot q$           |
| **Absorption**        | $p \vee (p \wedge q) \equiv p$                            | $p \wedge (p \vee q) \equiv p$                             |
| **Négation**          | $p \vee \lnot p \equiv \mathbf{V}$                        | $p \wedge \lnot p \equiv \mathbf{F}$                       |

: Équivalences logiques {#tbl-equivalences-logiques}

| **Numéro** | **Implication**                                                              |
|------------|------------------------------------------------------------------------------|
| **1**      | $p \rightarrow q \equiv \lnot p \vee q$                                      |
| **2**      | $p \rightarrow q \equiv \lnot q \rightarrow \lnot p$                         |
| **3**      | $p \vee q \equiv \lnot p \rightarrow q$                                      |
| **4**      | $p \wedge q \equiv \lnot(p \rightarrow \lnot q)$                             |
| **5**      | $\lnot(p \rightarrow q) \equiv p \wedge \lnot q$                             |
| **6**      | $(p \rightarrow q)\wedge (p\rightarrow r) \equiv p \rightarrow (q \wedge r)$ |
| **7**      | $(p \rightarrow r) \wedge (q \rightarrow r) \equiv (p \vee q) \rightarrow r$ |
| **8**      | $(p\rightarrow q) \vee (p \rightarrow r) \equiv p \rightarrow (q \vee r)$    |
| **9**      | $(p \rightarrow r) \vee (q \rightarrow r) \equiv (p \wedge q) \rightarrow r$ |

: Équivalences logiques (implications) {#tbl-equivalences-logiques-implications}

| **Numéro** | **Biconditionnelle**                                                                 |
|------------|--------------------------------------------------------------------------------------|
| **1**      | $p \leftrightarrow q \equiv (p\rightarrow q) \wedge (q \rightarrow q)$               |
| **2**      | $p \leftrightarrow q \equiv \lnot p \leftrightarrow \lnot q$                         |
| **3**      | $p \leftrightarrow q \equiv (p \wedge q) \vee (\lnot p \wedge \lnot q)$              |
| **4**      | $p \leftrightarrow q \equiv \lnot(p \wedge \lnot q) \wedge \lnot(\lnot p \wedge q )$ |
| **5**      | $\lnot(p \leftrightarrow q) \equiv p \leftrightarrow \lnot q$                        |

: Équivalences logiques (biconditionnelles) {#tbl-equivalences-logiques-biconditionnelles}

:::{#exm-proposition-tautologie-deux-manieres}
Vérifiez que la proposition
$$
\lnot (p \rightarrow q) \rightarrow \lnot q
$$
est une tautologie

a. à l'aide d'une table de vérité;

    |  $p$  |  $q$  | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ | $\phantom{V}$ |
|:-----:|:-----:|:-------------:|:-------------:|:-------------:|:-------------:|:-------------:|
| **V** | **V** |               |               |               |               |               |
| **V** | **F** |               |               |               |               |               |
| **F** | **V** |               |               |               |               |               |
| **F** | **F** |               |               |               |               |               |

a. sans l'aide d'une table de vérité, en utilisant les tableaux d'équivalences.
:::

:::{.callout-important}
## Propositions équivalentes ou non?

Pour démontrer que les propositions **ne sont pas** équivalentes, il suffit de fournir des valeurs de $p$, $q$ et $r$ pour lesquelles elles diffèrent. Pour démontrer que les propositions sont équivalentes, on peut procéder de l’une des trois façons suivantes.

1. Fournir leur table de vérité.
1. Utiliser la @tbl-equivalences-logiques, la @tbl-equivalences-logiques-implications ou la @tbl-equivalences-logiques-biconditionnelles.
1. Formuler une explication en mots qui montre que les deux propositions sont vraies, ou encore que les deux sont fausses, exactement pour les mêmes combinaisons de valeur de vérité des variables propositionnelles.
:::

## Prédicats et quantificateurs

Un énoncé contenant une ou plusieurs variables tel que
$$
x<10 \quad \text{ou} \quad x+2=7-y
$$
n'est pas une proposition pusique, tant que la valeur de $x$ ou $y$ n'est pas connue, on ne peut dire s'il est vrai ou faux.

:::{#def-sujet-predicat}
## Terminologie

Dans l'énoncé "$x<10$", $x$ est le **sujet**, et "est inférieur à 10" est le **prédicat**. Notons $P(x)$ l'énoncé $x<10$. On dit que $P$ est une **fonction propositionnelle**.
:::

Une fonction propositionnelle $P(x)$ prend la valeur vrai ou faux quand $x$ est précisé. Par exemple:

- $P(8)$ est une proposition vraie. On écrira parfois $P(8)$ est vrai (au masculin, en sous-entendant l'énoncé est vrai, ou même $P(8)\equiv \mathbf{V}$).
- $P(13)$ est une proposition fausse.
- $P(\text{Marc-André})$ n'est pas une proposition, car *Marc-André* n'est pas une valeur possible pour la variable $x$.

L'ensemble des valeurs possibles pour la variable $x$ est appelé **univers du discours**, ou **domaine** de la fonction $P$.

:::{#def-quantificateurs}
## Quantificateurs

$$
\forall:\ \text{quantificateur universel} \qquad \exists:\ \text{quantificateur existentiel}
$$

$\forall\ x\ P(x)$:
: signifie "Pour toutes les valeurs de $x$ dans l'univers du discours, $P(x)$". Ou encore "Quel que soit $x$ (dans l'univers du discours), $P(x)$".

$\exists\ x\ P(x)$:
: signifie "Il existe un élément de $x$ dans l'univers du discours tel que $P(x)$". Ou encore "Il y a au moins un $x$ (dans l'univers du discours) tel que $P(x)$". Ou encore "Pour un certain $x$ (dans l'univers du discours), $P(x)$".

**Notation**. Certains auteurs mettent une virgule avant la fonction propositionnelle, surtout quand celle-ci est composée. Par exemple: $\forall\ x,\ (P_1(x)\rightarrow P_2(x) \vee P_3(x))$. Par ailleurs, si l'ensemble $U$ n'a pas déjà été identifié, on peut préciser que la variable $x$ prendra des valeurs dans l'ensemble $U$ ainsi: $\exists\ x\in U,\ P(x)$.
:::

Lorsque l'univers du discours est un ensemble fini $\{x_1,x_2,\ldots, x_n\}$, on a les équivalences logiques suivantes:

\begin{align*}
\forall\ x\ P(x) &\equiv P(x_1)\wedge P(x_2) \wedge \cdots \wedge P(x_n) \\
\exists\ x\ P(x) &\equiv P(x_1)\vee P(x_2) \vee \cdots \vee P(x_n)
\end{align*}

La quantification universelle $\forall\ x\ P(x)$ est vraie quand $P(x)$ est vraie pour toutes les valeurs de $x$ dans l'univers du discours $U$. Elle est donc fausse s'il existe un $x$ de $U$ pour lequel $P(x)$ est fausse. Un tel élément est appelé un **contre-exemple** de $\forall\ x\ P(x)$.

La quantification existentielle $\exists\ x\ P(x)$ est vraie s'il existe au moins une valeur $x$ dans l'univers du discours telle que $P(x)$ est vraie. Elle est fausse si $P(x)$ est fausse pour toutes les valeurs possibles de $x$.

Ainsi, pour prouver un énoncé de la forme $\forall\ x\ P(x)$ est vrai, fournir un exemple de $x$ tel que $P(x)$ est vrai ne suffit pas. Il faut montrer que la proposition $P(x)$ est vraie pour toutes les valeurs de $x$, ce qui peut s'avérer particulièrement **difficile lorsque $U$ est un ensemble infini**. Il en va de même losqu'on veut prouver qu'un énoncé de la forme $\exists\ x\ P(x)$ est faux.

| Pour prouver que   | est **vrai**                                                                                  | est **faux**                                                                                   |
|--------------------|-----------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------|
| $\exists\ x\ P(x)$ | il suffit de fournir **un exemple**: un $x$ de $U$ tel que $P(x)$ est vrai.                   | il faut fournir un argument général pour montrer que $P(x)$ est faux quel que soit $x$ de $U$. |
| $\forall\ x\ P(x)$ | il faut fournir un argument général pour montrer que $P(x) est vrai quel que soit $x$ de $U$. | il suffit de fournir un **contre-exemple**: un $x$ de $U$ tel que $P(x)$ est faux.             |

: Comment prouver qu'un énoncé quantifié est vrai ou faux quand l'univers du discours $U$ est infini. {#tbl-prouver-enonce-univers-infini}

:::{#exm-univers-discours-nombres-reels}
Si l'univers du discours est l'ensemble des nombres réels et
\begin{align*}
&P(x)\ \text{désigne}\ x\geq 0 \\
&Q(x)\ \text{désigne}\ x\ \text{est un nombre premier} \\
&R(x)\ \text{désigne}\ 3^x+4^x=5^x \\
&S(x)\ \text{désigne}\ x\geq 100
\end{align*}
dites si chacun des énoncés suivants est une proposition vraie, une proposition fausse ou n'est pas une proposition. Donnez un exemple ou un contre-exemple le cas échéant. Dans le cas contraire, indiquez qu'un argument général est requis.

a. $\forall\ x\ P(x)$
a. $\forall\ x\ \lnot P(x)$
a. $\forall\ x\ P(x^2)$
a. $\exists\ x\ P(x)$
a. $\exists\ x\ \lnot P(x)$
a. $\exists\ x\ Q(x)$
a. $\exists\ x\ Q(x^2)$
a. $\forall\ x\ R(x)$
a. $P(x)$
a. $\forall\ x\ (S(x)\rightarrow P(x))$
a. $(\forall\ x\ P(x)) \rightarrow (\forall\ x\ S(x))$
a. $\forall\ x\ S(x+100)$
a. $\forall\ x\ S(x^2+100)$
:::

:::{#thm-de-morgan-quantificateurs}
## Lois de De Morgan pour les quantificateurs

$$
\lnot \exists\ x\ P(x) \equiv \forall\ x\ \lnot P(x) \qquad \lnot \forall\ x\ P(x) \equiv \exists\ x\ \lnot P(x)
$$
:::

:::{#exm-univers-etudiants-stjean-repertoire}
Si l'univers du discours est l'ensemble des étudiants du programme Sciences Informatique et Mathématique (ScIM) et $M(x)$ désigne l'énoncé *l'étudiant $x$ peut modifier les fichiers du répertoire $U$*, traduisez clairement les propositions suivantes à l'aide des quantificateurs.

a. Tous les étudiants de ScIM peuvent modifier les fichiers du répertoire $U$.
a. Il est faux que tous les étudiants de ScIM peuvent modifier les fichiers du répertoire $U$.
a. Au moins un étudiant de ScIM peut modifier les fichiers du répertoire $U$.
a. Il est faux qu'au moins un étudiant de ScIM peut modifier les fichiers du répertoire $U$.
a. Aucun étudiant de ScIM ne peut modifier les fichiers du répertoire $U$.
a. Au moins un étudiant de ScIM ne peut pas modifier les fichiers du répertoire $U$.

De plus, déterminez les propositions ci-dessus qui sont équivalentes.
:::

:::{#exm-univers-billes-rouges-bleues}
Si l'univers du discours est l'ensemble des billes contenues dans un bol, et si

- $G(x)$ désigne *la bille $x$ est grosse*
- $J(x)$ désigne *la bille $x$ est jaune*
- $R(x)$ désigne *la bille $x$ est rouge*
- $B(x)$ désigne *la bille $x$ est bleue*

traduisez clairement les propositions suivantes en prenant soin de bien formuler les phrases.

a. $\forall\ x\ (R(x) \vee J(x))$
a. $(\forall\ x\ R(x)) \vee (\forall\ x\ J(x))$
a. Les propositions a. et b. sont-elles équivalentes?
a. $\exists\ x\ B(x)$
a. $\lnot(\exists\ x\ B(x))$
a. Utilisez le quantificateur universel $\forall$ pour écrire une proposition équivalente à la précédente.
a. $\lnot(\forall\ x\ R(x))$
a. Utilisez le quantificateur existentiel $\exists$ pour écrire une proposition équivalente à la précédente.
a. $\forall\ x\ (G(x) \rightarrow B(x))$
a. $\exists\ x\ (G(x) \wedge B(x))$
a. $(\exists\ x\ G(x)) \wedge (\exists\ x\ B(x))$
a. Les deux propositions précédentes sont-elles équivalentes?
a. Les deux propositions suivantes sont-elles équivalentes?
$$
(\exists\ x\ R(x)) \vee (\exists\ x\ J(x)) \qquad \text{et} \qquad \exists\ x\ (R(x) \vee J(x))
$$
a. Les deux propositions suivantes sont-elles équivalentes?
$$
(\forall\ x\ R(x)) \wedge (\forall\ x\ G(x)) \qquad \text{et} \qquad \forall\ x\ (R(x) \wedge G(x))
$$
:::

## Opérations bit à bit

## Problèmes de logique

Les problèmes suivants se déroulent sur une île imaginaire où tous les habitants sont soit des **chevaliers**, qui disent toujours la vérité, soit des **fripons**, qui mentent toujours. Ces énigmes implique un visiteur qui rencontre un petit groupe d'habitants de l'île. La plupart du temps, le but du visiteur est de *déduire* les types des habitants à partir de leurs énoncés. 

Voici un exemple type de problème possible.

:::{.callout}
## Déduisez!

En vous promenant sur l'île, vous rencontrez trois habitants gardant un pont. Pour passer, vous devez déduire le type de chaque habitant. Chaque individu dit un seul énoncé:

- Individu A: Si je suis un fripon, alors il y a exactement deux chevaliers ici.
- Individu B: L'individu A ment.
- Individu C: Soit nous sommes tous des fripons ou alors au moins l'un d'entre nous est un chevalier.

Quels sont les types des trois individus?
:::

### Stratégies {.unnumbered}

Voici quelques stratégies que vous pouvez utiliser pour résoudre ce genre de problème:

- Commencez en supposant qu'un individu est d'un certain type. Soyez stratégique avec votre supposition, tentez de résoudre un énoncé **ET**.
    - Si un individu dit **ET**, supposez qu'il est un chevalier;
    - Si un individu dit **OU**, supposez qu'il est un fripon;
    - Si un individu dit **SI/ALORS**, supposez qu'il est un fripon;
    - Si un individu dit **SI ET SEULEMENT SI**, attendez de connaître la valeur de vérité de leur énoncé avant de faire une supposition.
- Lorsqu'un individu est un chevalier, vous pouvez continuer leur énoncé.
- Lorsqu'un individu est un fripon, vous pouvez continuer la négation de leur énoncé.
    - Partie 1 **ET** Partie 2 $\rightarrow$ **NON** Partie 1 **OU** **NON** Partie 2
    - Partie 1 **OU** Partie 2 $\rightarrow$ **NON** Partie 1 **ET** **NON** Partie 2
    - **SI** Partie 1, alors Partie 2 $\rightarrow$ Partie 1 **ET** **NON** Partie 2
- Soyez prudents avec les *si et seulement si*
    - Lorsqu'un *si et seulement si* est `VRAI`, alors les deux parties ont la **même** valeur de vérité.
    - Lorsqu'un *si et seulement si* est `FAUX`, alors les deux parties ont des valeurs de vérités **différentes**.
- Lorsque vous avez prouvé l'identité d'un individu, vous pouvez utiliser cette information partout dans le reste de l'énigme.
- Si vous avez suffisament d'information pour confirmer que l'énoncé d'un individu est `VRAI`, alors ils doivent être un chevalier.
- Si vous avez suffisament d'information pour confirmer que l'énoncé d'un individu est `FAUX`, alors ils doivent être un fripon.

### Trois énoncés différents

Nous pouvons, dans la plupart des problèmes, regrouper les énoncés des habitants de l'île en trois formes distinctes. 

#### Accusations et affirmations

Dans une accusation, un habitant *A* dit par exemple *B est un fripon* ou un énoncé équivalent comme *B ment toujours*. Dans une affirmation, l'habitant *A* dit par exemple *B est un chevalier* ou alors *B dit toujours la vérité*.

:::{#exm-accusation-different-types}
Que pouvez-vous conclure si *A* et *B* sont reliés par une **accusation**?
:::

:::{#exm-accusation-different-types}
Que pouvez-vous conclure si *A* et *B* sont reliés par une **affirmation**?
:::

#### Conjonctions de fripons

Un exemple de conjonction de fripons est lorsque *A* dit que *B est un chevalier ou je suis un fripon*, ou alors *C est un fripon et je suis un fripon*

:::{#exm-conjonction-de-fripons-ou}
Que pouvez-vous conclure si *A* et *B* sont reliés par **ou je suis un fripon**?
:::

:::{#exm-conjonction-de-fripons-et}
Que pouvez-vous conclure si *A* et *B* sont reliés par **et je suis un fripon**?
:::

#### Énoncés de différences ou de similarités

Parfois un habitant *A* dira *B est de mon type* ou peut-être *C n'est pas de mon type*. 

:::{#exm-similarite-fripons}
Que pouvez-vous conclure si *A* dit que *B est de son type*?
:::

:::{#exm-difference-fripons}
Que pouvez-vous conclure si *A* dit que *C n'est pas de son type*?
:::

Il est intéressant de comparer ces énoncés avec ceux d'accusations et d'affirmations. Ces deux types d'énoncés sont réciproques en quelque sorte. Lorsqu'un habitant dit directement de quel type est un autre habitant (dans une accusation ou une affirmation), tout ce qu'on apprend c'est que la source et la cible sont similaires ou différents, sans apprendre leur type. Par contre, lorsqu'un habitant dit un énoncé par rapport aux similitudes ou aux différences, nous apprenons exactement de quel type la cible est, sans apprendre si elle est similaire ou différente de la source.

:::{#exm-chevaliers-et-fripons-1}
Vous rencontrez trois habitants de l'île.

- A dit: B ne ment jamais.
- A dit: C est un chevalier ou je suis un fripon.
:::

:::{#exm-chevaliers-et-fripons-2}
Vous rencontrez trois habitants de l'île.

- A dit: B ment toujours.
- B dit: A n'est pas de mon type.
:::
